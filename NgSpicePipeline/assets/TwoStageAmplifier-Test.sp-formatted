circuit: TwoStageAmplifier
.include ../assets/45nm_CS.pm
.option TEMP=27C

V1 net14 0 dc 1
V2 net10 0 dc 1
V3 net4 0 dc 2.4
V4 net3 0 dc 2.1
V5 net2 0 dc 1.5
V6 net9 0 dc 700m
V7 vdd 0 dc 3.3

mn0 out1 net14 0 0 NMOS W=2.4u L=45n
mn1 out2 net10 0 0 NMOS W=2.4u L=45n

mn9 out4 net2 net11 0 NMOS W=58.5u L=117n
mn6 out3 net2 net6 0 NMOS W=58.5u L=117n

mn8 net11 net13 net8 0 NMOS W=25u L=45n
mn5 net6 net1 net8 0 NMOS  W=25u L=45n

mn7 net8 net9 0 0 NMOS W=52u L=45n

V8 net13 0 dc 1.2 ac 1
V9 net1 0 dc 1.2 ac 1

mp5 out1 out3 vdd vdd PMOS W=6u L=45n
mp4 out2 out4 vdd vdd PMOS W=6u L=45n

mp1 net12 net4 vdd vdd PMOS W=13u L=45n
mp0 net7 net4 vdd vdd PMOS W=13u L=45n

mp3 out4 net3 net12 vdd PMOS W=94u L=180n
mp2 out3 net3 net7 vdd PMOS W=94u L=180n

C4 out3 out1 14p
C3 out4 out2 14p
C1 out2 0 5p
C0 out1 0 5p

.control
set w0_array = ( 3.005716562271118e-05 3.005711555480957e-05 3.005374848842621e-05 3.0079787373542784e-05 3.0061768293380737e-05 3.004912555217743e-05 3.0059371292591095e-05 2.8975634574890135e-05 3.0056206583976747e-05 3.005739599466324e-05 )
set w1_array = ( 5.9439135193824764e-06 5.943119585514069e-06 5.945978969335556e-06 5.930766820907593e-06 5.94053915143013e-06 5.947207421064377e-06 5.942355901002884e-06 5.966222792863846e-06 5.943088442087173e-06 5.942223280668258e-06 )
set w2_array = ( 5.193262237310409e-05 5.193158116936684e-05 5.1935857594013216e-05 5.1912923991680146e-05 5.192731183767318e-05 5.193691799044609e-05 5.1929442226886746e-05 5.5448898091912275e-05 5.193033239245414e-05 5.192961099743843e-05 )
set i = 10
let index = 1
repeat $i
    alter @mn5[w] = $w0_array[$&index]
	alter @mn8[w] = $w0_array[$&index]
	alter @mn7[w] = $w1_array[$&index]
	alter @mp5[w] = $w2_array[$&index]
	alter @mp4[w] = $w2_array[$&index]
    op
    let id2 = @mp4[id]
    let id1 = @mn8[id]
    let pw = (id1+id2)*3.3
    let av = v(out2)/v(net1)
    wrdata ../out/w0-test.csv $w0_array[$&index]
    wrdata ../out/w1-test.csv $w1_array[$&index]
    wrdata ../out/w2-test.csv $w2_array[$&index]
    wrdata ../out/pw-test.csv pw
    wrdata ../out/a0-test.csv av

    ac dec 1000 1G 100G
    let resp = db(v(out2)/v(net1))
    let measurement_point = vecmax (resp) - 3.0
    meas AC upper_3dB WHEN resp = measurement_point
    print upper_3dB >> ../out/bw-test.csv
    set appendwrite
    let index = index + 1

end
.endc