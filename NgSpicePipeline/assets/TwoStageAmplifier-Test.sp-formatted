circuit: TwoStageAmplifier
.include ../assets/45nm_CS.pm
.option TEMP=27C

V1 net14 0 dc 1
V2 net10 0 dc 1
V3 net4 0 dc 2.4
V4 net3 0 dc 2.1
V5 net2 0 dc 1.5
V6 net9 0 dc 700m
V7 vdd 0 dc 3.3

mn0 out1 net14 0 0 NMOS W=2.4u L=45n
mn1 out2 net10 0 0 NMOS W=2.4u L=45n

mn9 out4 net2 net11 0 NMOS W=58.5u L=117n
mn6 out3 net2 net6 0 NMOS W=58.5u L=117n

mn8 net11 net13 net8 0 NMOS W=25u L=45n
mn5 net6 net1 net8 0 NMOS  W=25u L=45n

mn7 net8 net9 0 0 NMOS W=52u L=45n

V8 net13 0 dc 1.2 ac 1
V9 net1 0 dc 1.2 ac 1

mp5 out1 out3 vdd vdd PMOS W=6u L=45n
mp4 out2 out4 vdd vdd PMOS W=6u L=45n

mp1 net12 net4 vdd vdd PMOS W=13u L=45n
mp0 net7 net4 vdd vdd PMOS W=13u L=45n

mp3 out4 net3 net12 vdd PMOS W=94u L=180n
mp2 out3 net3 net7 vdd PMOS W=94u L=180n

C4 out3 out1 14p
C3 out4 out2 14p
C1 out2 0 5p
C0 out1 0 5p

.control
set w0_array = ( 2.996645599603653e-05 2.7083893343806266e-05 2.650034800171852e-05 2.9967659413814544e-05 2.7509388104081154e-05 2.7589598083868624e-05 2.731951102614403e-05 2.556928262114525e-05 2.5000119805336e-05 2.597898930311203e-05 )
set w1_array = ( 6.9918565675616265e-06 8.470673099160193e-06 6.93654491007328e-06 6.511344745755196e-06 7.480092778801918e-06 8.488509640097618e-06 6.001848265528679e-06 8.497073039412499e-06 6.445363894104957e-06 7.451619900763035e-06 )
set w2_array = ( 5.438672153651714e-05 5.539963065087796e-05 5.2402035549283024e-05 5.2327447310090066e-05 5.345114453881979e-05 5.3437542967498304e-05 5.4851526796817784e-05 5.347493610158563e-05 5.33302312605083e-05 5.34365515448153e-05 )
set i = 10
let index = 1
repeat $i
    alter @mn5[w] = $w0_array[$&index]
	alter @mn8[w] = $w0_array[$&index]
	alter @mn7[w] = $w1_array[$&index]
	alter @mp5[w] = $w2_array[$&index]
	alter @mp4[w] = $w2_array[$&index]
    op
    let id2 = @mp4[id]
    let id1 = @mn8[id]
    let pw = (id1+id2)*3.3
    let av = v(out2)/v(net1)
    wrdata ../out/w0-test.csv $w0_array[$&index]
    wrdata ../out/w1-test.csv $w1_array[$&index]
    wrdata ../out/w2-test.csv $w2_array[$&index]
    wrdata ../out/pw-test.csv pw
    wrdata ../out/a0-test.csv av

    ac dec 1000 1G 100G
    let resp = db(v(out2)/v(net1))
    let measurement_point = vecmax (resp) - 3.0
    meas AC upper_3dB WHEN resp = measurement_point
    print upper_3dB >> ../out/bw-test.csv
    set appendwrite
    let index = index + 1

end
.endc